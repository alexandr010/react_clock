{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timer","window","setInterval","date","setState","console","log","toLocaleTimeString","this","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","randomClockName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,MAAO,MAHX,uDAME,WAA2B,IAAD,OAClBA,EAAQC,OAAOC,aAAY,WAC/B,IAAMC,EAAO,IAAIJ,KAEjB,EAAKK,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,IAAIH,EAAKI,wBAChB,KAEHC,KAAKJ,SAAS,CAAEJ,YAfpB,gCAkBE,SAAmBS,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAEhCL,QAAQC,IAAR,qCAA0CG,EAAUC,KAApD,eAA+DF,KAAKG,MAAMD,SArBhF,kCAyBE,WAC2B,OAArBF,KAAKX,MAAMG,OACbY,cAAcJ,KAAKX,MAAMG,SA3B/B,oBA+BE,WACE,OACE,mCACE,8CAEG,IACAQ,KAAKX,MAAMC,KAAKS,8BArC3B,GAA2BM,IAAMC,WCF3BC,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKd,SAAS,CAAEY,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKf,SAAS,CAAEY,gBAAgB,K,EAGlCI,gBAAkB,WAChB,EAAKhB,SAAS,CAAEa,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAG7C,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACChB,KAAKX,MAAMmB,gBAAkB,cAAC,EAAD,CAAON,KAAMF,KAAKX,MAAMoB,YACtD,wBACEQ,KAAK,SACLC,QAASlB,KAAKU,UAFhB,wBAMA,wBACEO,KAAK,SACLC,QAASlB,KAAKW,UAFhB,wBAMA,wBACEM,KAAK,SACLC,QAASlB,KAAKY,gBAFhB,oC,GAnCUP,IAAMC,WA8CTC,ICpDfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.15b97bab.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number,\n};\n\ntype State = {\n  time: Date,\n  timer: number | null,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date(),\n    timer: null,\n  };\n\n  componentDidMount(): void {\n    const timer = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n\n    this.setState({ timer });\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.timer !== null) {\n      clearInterval(this.state.timer);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <p>\n          Current time:\n          {' '}\n          {this.state.time.toLocaleTimeString()}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components';\n\ntype Props = {};\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  randomClockName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 1000) });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.randomClockName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}